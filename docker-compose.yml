version: "3.7"

x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "3"

services:
  identifier:
    image: semtech/mu-identifier:1.10.1
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging
  dispatcher:
    image: semtech/mu-dispatcher:2.1.0-beta.2
    volumes:
      - ./config/dispatcher:/config
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging
  deltanotifier:
    image: cecemel/delta-notifier:0.2.0-beta.2
    volumes:
      - ./config/delta:/config
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging
  database:
    image: semtech/mu-authorization:feature-service-roam-r1.1
    environment:
      MU_SPARQL_ENDPOINT: "http://virtuoso:8890/sparql"
      DATABASE_OVERLOAD_RECOVERY: "true"
      DATABASE_COMPATIBILITY: "Virtuoso"
      # Note: not sure wether it gets picked up properly, it is meant for healing-process which may make
      # heavy queries
      QUERY_MAX_PROCESSING_TIME: 605000
      QUERY_MAX_EXECUTION_TIME: 605000
    volumes:
      - ./config/authorization:/config
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging
  virtuoso:
    image: redpencil/virtuoso:1.2.0-rc.1
    environment:
      SPARQL_UPDATE: "true"
      DEFAULT_GRAPH: "http://mu.semte.ch/application"
    volumes:
      - ./data/db:/data
      - ./config/virtuoso/virtuoso.ini:/data/virtuoso.ini # Note: on production override this setting
      - ./config/virtuoso/:/opt/virtuoso-scripts
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging
  migrations:
    image: semtech/mu-migrations-service:0.6.0
    links:
      - virtuoso:database
    environment:
      MU_SPARQL_TIMEOUT: "300"
    volumes:
      - ./config/migrations:/data/migrations
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging
  cache:
    image: semtech/mu-cache:2.0.1
    links:
      - resource:backend
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging
  resource:
    image: semtech/mu-cl-resources:feature-optionally-accept-strange-resource-types
    environment:
      CACHE_CLEAR_PATH: "http://cache/.mu/clear-keys"
    volumes:
      - ./config/resources:/config
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging
  login:
    image: lblod/acmidm-login-service:0.9.2
    environment:
      MU_APPLICATION_AUTH_DISCOVERY_URL: "https://authenticatie-ti.vlaanderen.be/op"
      MU_APPLICATION_AUTH_CLIENT_ID: "a2c0d6ea-01b4-4f68-920b-10834a943c27"
      MU_APPLICATION_AUTH_REDIRECT_URI: "https://loket.lblod.info/authorization/callback"
      MU_APPLICATION_AUTH_CLIENT_SECRET: "secret"
      LOG_SINK_URL: "http://sink"
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging
  file:
    image: cecemel/file-service:3.3.0
    volumes:
      - ./data/files:/share
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging

  frontend:
    # TODO: update frontend image
    image: lblod/frontend-lokaal-mandatenbeheer:latest
    links:
      - identifier:backend
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging
  filehost:
    image: nginx:1.15.2
    volumes:
      - ./config/filehost/nginx.conf:/etc/nginx/nginx.conf
      - ./config/filehost/conf.d:/etc/nginx/conf.d
      - ./data/files:/data:ro
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging
  sink:
    image: nginx:1.15.2
    volumes:
      - ./config/sink/sink.conf:/etc/nginx/conf.d/default.conf
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging
  person-uri-for-social-security-number:
    image: lblod/person-uri-for-social-security-number-service:0.4.0
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging
  mandataris-archive:
    image: lblod/mandataris-archive-service:0.0.6
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging
  jobs-controller:
    image: lblod/job-controller-service:1.0.1
    volumes:
      - ./config/jobs-controller/:/config/
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging
  update-bestuurseenheid-mock-login:
    image: lblod/update-bestuurseenheid-mock-login-service:0.1.2
    volumes:
      - ./config/mock-login:/config
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging
  form-content:
    image: lblod/form-content-service:latest
    restart: always
    volumes:
      - ./config/form-content:/forms
